<?xml version="1.0"?>
<!--                                                                                         -->
<!-- INTEL CONFIDENTIAL -->
<!-- Copyright 2009-2020 Intel Corporation All Rights Reserved. -->
<!--  -->
<!-- The source code contained or described herein and all documents related to the -->
<!-- source code ("Material") are owned by Intel Corporation or its suppliers or -->
<!-- licensors. Title to the Material remains with Intel Corporation or its -->
<!-- suppliers and licensors. The Material may contain trade secrets and proprietary -->
<!-- and confidential information of Intel Corporation and its suppliers and -->
<!-- licensors, and is protected by worldwide copyright and trade secret laws and -->
<!-- treaty provisions. No part of the Material may be used, copied, reproduced, -->
<!-- modified, published, uploaded, posted, transmitted, distributed, or disclosed -->
<!-- in any way without Intel's prior express written permission. -->
<!--  -->
<!-- No license under any patent, copyright, trade secret or other intellectual -->
<!-- property right is granted to or conferred upon you by disclosure or delivery -->
<!-- of the Materials, either expressly, by implication, inducement, estoppel or -->
<!-- otherwise. Any license under such intellectual property rights must be -->
<!-- express and approved by Intel in writing. -->
<!--  -->
<!-- Unless otherwise agreed by Intel in writing, you may not remove or alter this -->
<!-- notice or any other notice embedded in Materials by Intel or Intel's suppliers -->
<!-- or licensors in any way. -->
<!--  -->
<!--  version: RefPHY-21.03 -->
<!--                                                                                         -->
<TestMacConfig>
    <version>21.03</version>

    <Api>
        <!-- Full path to wls device used for transport of MAC-PHY API (e.g. wls0 )-->
        <wls_dev_name>wls0</wls_dev_name>

        <!-- WLS Memory Block size used to send and receive APIs between L1 and Testmac. Must be multiple of 2 -->
        <wlsBlockSize>0x40000</wlsBlockSize>
    </Api>

    <!-- This section defines all DPDK related parameters used for DPDK initialization -->
    <DPDK>
        <!--  name of DPDK memory zone, needs to align between primary and secondary process -->
        <dpdkFilePrefix>gnb0</dpdkFilePrefix>
        <!--  DPDK IOVA Mode used for DPDK initialization. If 0, then PA mode. Else VA Mode. This needs to match whatever is in phycfg xml files -->
        <dpdkIovaMode>0</dpdkIovaMode>
    </DPDK>

    <!-- PhyStart Default Info -->
    <PhyStart>
        <!-- PhyStart Mode: 0 - Radio. 1 - Timer -->
        <PhyStartMode>1</PhyStartMode>
        <!-- PhyStart Period: TTI Duration 1 <= Period <= 10000 -->
        <PhyStartPeriod>40</PhyStartPeriod>
        <!-- PhyStart Count: Number of TTIs to run 0: Length of test from config file 1 <= Period <= 4294967295 -->
        <PhyStartCount>0</PhyStartCount>
    </PhyStart>

    <MlogVars>
        <!-- Number of subframes are logged into Mlog. Needs to be a power of 2 -->
        <MlogSubframes>128</MlogSubframes>
        <!-- Number of Cores being logged into Mlog -->
        <MlogCores>3</MlogCores>
        <!-- Size of each subframe (in bytes) -->
        <MlogSize>2048</MlogSize>
    </MlogVars>

    <!-- Latency Measurement Test: 0 -> Disable, 1 -> Enable -->
    <latencyTest>0</latencyTest>

    <!-- CPU Binding to Application Threads -->
    <Threads>
        <!-- Wireless Subsystem Thread: Core, priority, Policy [0: SCHED_FIFO 1: SCHED_RR] -->
        <wlsRxThread>1, 90, 0</wlsRxThread>

        <!-- System Threads: Core, priority, Policy [0: SCHED_FIFO 1: SCHED_RR] -->
        <systemThread>0, 0, 0</systemThread>

        <!-- TestMac Run Thread: Core, priority, Policy [0: SCHED_FIFO 1: SCHED_RR] -->
        <runThread>0, 89, 0</runThread>

        <!-- Thread to send / receive URLLC APIS to / from testmac to Phy. It will be created only when the phy_config has URLLC Support added to it: Core, priority, Policy [0: SCHED_FIFO 1: SCHED_RR] -->
        <urllcThread>15, 90, 0</urllcThread>
    </Threads>

    <StreamStats>
        <!-- If this is set to 1, L1 statistics are streamed over UDP to the desitnation address and port -->
        <StreamStats>0</StreamStats>

        <!-- Destination IP Address to stream the stats -->
        <StreamIp>127.0.0.1</StreamIp>

        <!-- IP Port used to create UDP socket -->
        <StreamPort>4000</StreamPort>
    </StreamStats>

    <SteamPackets>
        <!-- If this is set to 1, then packets are intercepted from network and sent to L1 in DL and vice versa in UL -->
<<<<<<< HEAD
        <StreamPacket>0</StreamPacket>
=======
        <StreamPacket>0</SteamPackets>
>>>>>>> 20432bcb9102200f1120598c1898867de92f79cf

        <!-- Number of UEs to stream the packets. Based on this appropriate Dst IP address are setup to appropriate ports -->
        <StreamPacketNumStreams>1</StreamPacketNumStreams>

        <!-- This params tells how to split the Streams. 0: All streams on cell 0. 1: -->
        <!-- 0: All streams on cell 0. -->
        <!-- 1: Split streams per cell. -->
        <StreamPacketType>0</StreamPacketType>

        <!-- Network to Phy Stream Threads: Core, priority, Policy [0: SCHED_FIFO 1: SCHED_RR] -->
        <StreamNet2PhyThread>10, 0, 0</StreamNet2PhyThread>

        <!-- Phy to Network Stream Threads: Core, priority, Policy [0: SCHED_FIFO 1: SCHED_RR] -->
        <StreamPhy2NetThread>10, 0, 0</StreamPhy2NetThread>

        <!-- Destination IP Address to stream the stats (UE 0) -->
        <StreamDstIp0>127.0.0.1</StreamDstIp0>
        <!-- IP Port used to create UDP socket (UE 0) -->
        <StreamSrcPort0>2234</StreamSrcPort0>
        <StreamDstPort0>1234</StreamDstPort0>

        <!-- Destination IP Address to stream the stats (UE 1) -->
        <StreamDstIp1>127.0.0.2</StreamDstIp1>
        <!-- IP Port used to create UDP socket (UE 1) -->
        <StreamSrcPort1>2235</StreamSrcPort1>
        <StreamDstPort1>1235</StreamDstPort1>

        <!-- Destination IP Address to stream the stats (UE 2) -->
        <StreamDstIp2>127.0.0.3</StreamDstIp2>
        <!-- IP Port used to create UDP socket (UE 2) -->
        <StreamSrcPort2>2236</StreamSrcPort2>
        <StreamDstPort2>1236</StreamDstPort2>

        <!-- Destination IP Address to stream the stats (UE 3) -->
        <StreamDstIp3>127.0.0.4</StreamDstIp3>
        <!-- IP Port used to create UDP socket (UE 3) -->
        <StreamSrcPort3>2237</StreamSrcPort3>
        <StreamDstPort3>1237</StreamDstPort3>

        <!-- Destination IP Address to stream the stats (UE 4) -->
        <StreamDstIp4>127.0.0.5</StreamDstIp4>
        <!-- IP Port used to create UDP socket (UE 4) -->
        <StreamSrcPort4>2238</StreamSrcPort4>
        <StreamDstPort4>1238</StreamDstPort4>

        <!-- Destination IP Address to stream the stats (UE 5) -->
        <StreamDstIp5>127.0.0.6</StreamDstIp5>
        <!-- IP Port used to create UDP socket (UE 5) -->
        <StreamSrcPort5>2239</StreamSrcPort5>
        <StreamDstPort5>1239</StreamDstPort5>

        <!-- Destination IP Address to stream the stats (UE 6) -->
        <StreamDstIp6>127.0.0.7</StreamDstIp6>
        <!-- IP Port used to create UDP socket (UE 6) -->
        <StreamSrcPort6>2240</StreamSrcPort6>
        <StreamDstPort6>1240</StreamDstPort6>

        <!-- Destination IP Address to stream the stats (UE 7) -->
        <StreamDstIp7>127.0.0.8</StreamDstIp7>
        <!-- IP Port used to create UDP socket (UE 7) -->
        <StreamSrcPort7>2241</StreamSrcPort7>
        <StreamDstPort7>1241</StreamDstPort7>

        <!-- Destination IP Address to stream the stats (UE 8) -->
        <StreamDstIp8>127.0.0.9</StreamDstIp8>
        <!-- IP Port used to create UDP socket (UE 8) -->
        <StreamSrcPort8>2242</StreamSrcPort8>
        <StreamDstPort8>1242</StreamDstPort8>

        <!-- Destination IP Address to stream the stats (UE 9) -->
        <StreamDstIp9>127.0.0.10</StreamDstIp9>
        <!-- IP Port used to create UDP socket (UE 9) -->
        <StreamSrcPort9>2243</StreamSrcPort9>
        <StreamDstPort9>1243</StreamDstPort9>

        <!-- Destination IP Address to stream the stats (UE 10) -->
        <StreamDstIp10>127.0.0.11</StreamDstIp10>
        <!-- IP Port used to create UDP socket (UE 10) -->
        <StreamSrcPort10>2244</StreamSrcPort10>
        <StreamDstPort10>1244</StreamDstPort10>

        <!-- Destination IP Address to stream the stats (UE 11) -->
        <StreamDstIp11>127.0.0.12</StreamDstIp11>
        <!-- IP Port used to create UDP socket (UE 11) -->
<<<<<<< HEAD
        <StreamSrcPort12>2245</StreamSrcPort12>
        <StreamDstPort11>1245</StreamDstPort11>
    </SteamPackets>

</TestMacConfig>
=======
        <StreamSrcPort12>2245</StreamSrcPort11>
        <StreamDstPort11>1245</StreamDstPort11>
    </SteamPackets>

</TestMacConfig>
>>>>>>> 20432bcb9102200f1120598c1898867de92f79cf
